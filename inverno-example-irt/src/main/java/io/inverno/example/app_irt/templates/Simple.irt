/*
 * Copyright 2021 Jeremy KUHN
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.inverno.example.app_irt.templates;

import static io.inverno.example.app_irt.pipes.SamplePipes.*;

import io.inverno.example.app_irt.model.Message;
import java.util.List;

option modes = {"STRING"};
option charset = "utf-8";

bug(java.lang.String str) -> {}

(Message message) -> {The message is: {@message.message}}

list(List<Message> messages) -> {
Messages are: 
{messages;(message) -> item_important(message) when (message.isImportant());item(message)}
}

item(Message message) -> {{@message.message}
}

item_important(Message message) -> {**{@message.message}**
}

list_numbered(List<Message> messages) -> {
Messages are: 
{messages;(index, message) -> item_numbered(index, message)}
}

item_numbered(long index, Message message) -> {{@index}. {@message.message}
}

pipe(Message message) -> {The message is: {@message.message|uppercase}}

pipe_lambda(Message message) -> {The message is: {@message.message|((String content) -> content.toUpperCase())}}
