<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	Copyright 2021 Jeremy KUHN
	
	Licensed under the Apache License, Version 2.0 (the "License");
	you may not use this file except in compliance with the License.
	You may obtain a copy of the License at
	
	   http://www.apache.org/licenses/LICENSE-2.0
	
	Unless required by applicable law or agreed to in writing, software
	distributed under the License is distributed on an "AS IS" BASIS,
	WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
	See the License for the specific language governing permissions and
	limitations under the License.
 -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.inverno</groupId>
		<artifactId>inverno-examples-root</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	
	<groupId>io.inverno.example</groupId>
	<artifactId>inverno-example-grpc-client</artifactId>
	<packaging>jar</packaging>

	<name>io.inverno.example.app_grpc_client</name>
	<description>Inverno gRPC client example application</description>
	
	<dependencies>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-boot</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-configuration</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-grpc-client</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-http-client</artifactId>
		</dependency>

		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-discovery-http</artifactId>
		</dependency>
		<dependency>
			<groupId>io.inverno.mod</groupId>
			<artifactId>inverno-web-client</artifactId>
		</dependency>

		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-classes-epoll</artifactId>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-transport-native-epoll</artifactId>
			<classifier>linux-x86_64</classifier>
		</dependency>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
	</dependencies>
	
	<build>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
			</extension>
		</extensions>
		<plugins>
			<plugin>
				<groupId>org.xolstice.maven.plugins</groupId>
				<artifactId>protobuf-maven-plugin</artifactId>
				<extensions>true</extensions>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<protocArtifact>com.google.protobuf:protoc:${version.protobuf}:exe:${os.detected.classifier}</protocArtifact>
					<protocPlugins>
						<protocPlugin>
							<id>inverno-grpc-protoc-plugin</id>
							<groupId>io.inverno.tool</groupId>
							<artifactId>inverno-grpc-protoc-plugin</artifactId>
							<version>${version.inverno.tools}</version>
							<mainClass>io.inverno.tool.grpc.protocplugin.InvernoGrpcProtocPlugin</mainClass>
							<args>--client</args>
						</protocPlugin>
					</protocPlugins>
				</configuration>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.inverno.tool</groupId>
					<artifactId>inverno-maven-plugin</artifactId>
					<configuration>
						<vmOptions>--add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<configuration>
						<archive>
							<manifestEntries>
								<Automatic-Module-Name>${project.name}</Automatic-Module-Name>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	
	<profiles>
		<profile>
			<id>native</id>
			<dependencies>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-core</artifactId>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>org.apache.logging.log4j</groupId>
					<artifactId>log4j-to-slf4j</artifactId>
				</dependency>
				<dependency>
					  <groupId>ch.qos.logback</groupId>
					  <artifactId>logback-classic</artifactId>
				</dependency>
			</dependencies>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<mainClass>io.inverno.example.app_grpc_client.Main</mainClass>
							<imageName>example-grpc-client</imageName>
							<buildArgs>
								<buildArg>--verbose</buildArg>
								<buildArg>--no-server</buildArg>
								<buildArg>--no-fallback</buildArg>
								<buildArg>--allow-incomplete-classpath</buildArg>
								<buildArg>--enable-http</buildArg>
								<buildArg>--enable-https</buildArg>
								<buildArg>--install-exit-handlers</buildArg>
								<buildArg>--gc=G1</buildArg>
								<buildArg>-H:+ReportExceptionStackTraces</buildArg>
								<buildArg>-H:+PrintClassInitialization</buildArg>
							</buildArgs>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.inverno.tool</groupId>
						<artifactId>inverno-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>inverno-package-app</id>
								<phase>package</phase>
								<goals>
									<goal>package-app</goal>
								</goals>
								<configuration>
									<vm>server</vm>
									<!-- jdk.crypto.ec: TLS, jdk.jdwp.agent: remote debug -->
									<addModules>jdk.crypto.ec,jdk.jdwp.agent</addModules>
									<launchers>
										<launcher>
											<name>example-grpc-client</name>
											<vmOptions>-Xms2G -Xmx2G -XX:+UseNUMA -XX:+UseParallelGC --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
											<winConsole>true</winConsole>
										</launcher>
									</launchers>
									<archiveFormats>
										<archiveFormat>zip</archiveFormat>
									</archiveFormats>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>release-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.inverno.tool</groupId>
						<artifactId>inverno-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>inverno-package-image</id>
								<phase>package</phase>
								<goals>
									<goal>package-image</goal>
								</goals>
								<configuration>
									<vm>server</vm>
									<!-- jdk.crypto.ec: TLS, jdk.jdwp.agent: remote debug -->
									<addModules>jdk.crypto.ec,jdk.jdwp.agent</addModules>
									<executable>example-grpc-client</executable>
									<launchers>
										<launcher>
											<name>example-grpc-client</name>
											<vmOptions>-Xms2G -Xmx2G -XX:+UseNUMA -XX:+UseParallelGC --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
										</launcher>
									</launchers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>install-image</id>
			<build>
				<plugins>
					<plugin>
						<groupId>io.inverno.tool</groupId>
						<artifactId>inverno-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>inverno-install-image</id>
								<phase>install</phase>
								<goals>
									<goal>install-image</goal>
								</goals>
								<configuration>
									<vm>server</vm>
									<!-- jdk.crypto.ec: TLS, jdk.jdwp.agent: remote debug -->
									<addModules>jdk.crypto.ec,jdk.jdwp.agent</addModules>
									<executable>example-grpc-client</executable>
									<launchers>
										<launcher>
											<name>example-grpc-client</name>
											<vmOptions>-Xms2G -Xmx2G -XX:+UseNUMA -XX:+UseParallelGC --add-modules io.netty.transport.unix.common,io.netty.transport.classes.epoll,io.netty.transport.epoll.linux.x86_64</vmOptions>
										</launcher>
									</launchers>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
